.tile { 
  display: block;
  float: left;

  overflow: hidden;
  position: relative;
  &>* { 
    display:  block;
    position: absolute;
    }


  .tileX (@index,@screen,@prefix:~"") when (@index > 0) { 
    &.@{prefix}x@{index} { .tile-x(@index,@screen); }
    .tileX(@index - 1,@screen,@prefix);
    }
  .tileX (0,@screen,@prefix) {}


  // Colors
              .bg-and-fg(@btnNormalBackground );
  &.white   { .bg-and-fg(white                ); }
  &.black   { .bg-and-fg(black                ); }
  &.blue    { .bg-and-fg(@blue                ); }
  &.info    { .bg-and-fg(@btnInfoBackground   ); }
  &.green   { .bg-and-fg(@green               ); }
  &.orange  { .bg-and-fg(@orange              ); }
  &.red     { .bg-and-fg(@red                 ); }
  &.inverse { .bg-and-fg(@btnInverseBackground); }

  @tileGutterPpt: unit((@fluidGridGutterWidth*11)/12)/100;
  @tileColumnPpt: unit(@fluidGridColumnWidth)/100;
  .tile-x(@index,@screen) { 
    @row: @screen - @screen * @tileGutterPpt * 2;
    @gutter: @tileGutterPpt*@screen; 
    @width:  (@tileGutterPpt*@row * (@index - 1))
           + (@tileColumnPpt*@row * (@index    ))
           - @gutter - 0.999999;
    width:  @width;
    height: @width;
    margin: 0 @gutter @gutter 0;
    .components-x(@index,@width);
    }
  .components-x(@index,@width) { 
    @parts: 14 + @index * 2;
    @off: @width / @parts;

    .name { 
      bottom:      @off; 
      left:        @off;
      font-size:   @off*2;
      line-height: @off*2;
      height:      @off*2;
      white-space: nowrap;
      }
    
    .icon { 
      top: 0; left: 0; bottom: 0; right: 0;
      white-space: nowrap;
      .vertical-align;
      text-align: center;
      font-size: @width - @off*8;
      }
    }

  .tileX(@gridColumns,@screenDesktop);
  .tileX(@gridColumns,@screenDesktop,~"desktop-");
  @media (max-width: @screenTabletMax) { 
    .tileX(@gridColumns,@screenTablet);
    .tileX(@gridColumns,@screenTablet,~"tablet-");
    }
  @media (max-width: @screenPhoneMax) { 
    .tileX(@gridColumns,@screenPhone);
    .tileX(@gridColumns,@screenPhone,~"phone-");
    }
  
  &.block { 
    width: 100%;
    height: 0;
    padding-top: 100%;
    margin: 0;
    }

  }

/*
.tile { 
  display: block;
  background: red;
  font-size: 1px;
  min-height: 1px;

  // Colors
                   .bg-and-fg(@btnNormalBackground );
  &.tile-white   { .bg-and-fg(white                ); }
  &.tile-black   { .bg-and-fg(black                ); }
  &.tile-primary { .bg-and-fg(@btnPrimaryBackground); }
  &.tile-info    { .bg-and-fg(@btnInfoBackground   ); }
  &.tile-success { .bg-and-fg(@btnSuccessBackground); }
  &.tile-warning { .bg-and-fg(@btnWarningBackground); }
  &.tile-danger  { .bg-and-fg(@btnDangerBackground ); }
  &.tile-inverse { .bg-and-fg(@btnInverseBackground); }


  overflow: hidden;
  position: relative;
  &>* { 
    display:  block;
    position: absolute;
    }
  

  //.fluid (@fluidGridColumnWidth, @fluidGridGutterWidth) 

  .tileX (@index) when (@index > 0) { 
    &.span@{index} { .tile(@index); }
    .tileX(@index - 1);
    }
  .tileX (0) {}

  .tile(@columns) { 
    @width: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1));
    padding-top: @width;

    @winFactor: unit((100% - @fluidGridGutterWidth*3 ) / 100);
    @minWidthPx: 49px * @columns;
    @minWidthVw: unit(@width * @winFactor, vw);

    .tile-components(@width) { 
      @parts: 14 + @columns * 2;
      @off: @width / @parts;

      .name { 
	bottom:      @off; 
	left:        @off;
	font-size:   @off*2;
	line-height: @off*2;
	height:      @off*2;
	white-space: nowrap;
	}

      .icon { 
	top: 0; left: 0; bottom: 0; right: 0;
	white-space: nowrap;
	.vertical-align;
	text-align: center;
	font-size: @width - @off*8;
	}
      }

    .tile-components(@minWidthPx);
    .tile-components(@minWidthVw);
    @mT: @screenTablet - 1;
    @media (max-width: @mT) { 
      float: left;
      width: @width;
      &,&:first-child { 
	margin: @fluidGridGutterWidth * (1/4);
	}
      @mobWidthPx: 29px * @columns;
      .tile-components(@mobWidthPx);
      .tile-components(@minWidthVw);
      }
    
    }

  // generate "tileX"
  .tileX (@gridColumns);

  }
*/
.span-first { margin: 0; }
@media (max-width: @screenPhoneMax) { 
  .row-fluid { 
    @colWidth: 85% / 4;
    @gutWidth: 15% / 3;
    .phone-span(@x) { 
      float: left;
      width: @colWidth * @x + @gutWidth * (@x - 1);
      margin-left: @gutWidth;
      &:first-child { margin-left: 0; }
      }
    .phone-offset(@x) { 
      @margin: @gutWidth + @colWidth * @x + @gutWidth * (@x - 1);
      margin-left: @margin;
      &:first-child { margin-left: @margin; }
      }
    .phone-span1   { .phone-span(  1); }
    .phone-span2   { .phone-span(  2); }
    .phone-span3   { .phone-span(  3); }
    .phone-span4   { .phone-span(  4); }
    .phone-offset1 { .phone-offset(1); }
    .phone-offset2 { .phone-offset(2); }
    .phone-offset3 { .phone-offset(3); }
    .phone-span-first { margin: 0; }
    }
  }
